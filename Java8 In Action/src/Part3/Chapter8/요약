- 람다 표현식으로 가독성이 좋고 더 유연한 코드를 만들 수 있다.

- 익명 클래스는 람다 표현식으로 바꾸는 것이 좋다. 하지만 이때 this, 변수 섀도 등 미묘하게 의미상 다른 내용이
있음을 주의하자. 메서드 레퍼런스로 람다 표현식보다 더 가독성이 좋은 코드를 구현할 수 있다.

- 반복적으로 컬렉션을 처리하는 루틴은 스트림 API로 대체할 수 있을지 고려하는것이 좋다.

- 람다 표현식으로 전략, 템플릿 메서드, 옵저버, 의무 체인, 팩토리 등의 객체지햫ㅇ 디자인 패턴에서 발생하는
불필요한 코드를 제거할 수 있다.

- 람다 표현식도 단위 테스트를 수행할 수 있다. 하지만 람다 표현식 자체를 테스트하는 것보다는 람다 표현식이
사용되는 메서드의 동작을 테스트하는 것이 바람직하다.

- 복잡한 람다 표현식은 일반 메서드로 재구현할 수 있다.

- 람다 표현식을 사용하면 스택 트레이스를 이해하기 어려워진다.

- 스트림 파이프라인에서 요소를 처리할 때 peek 메서드로 중간값을 확인할 수 있다.